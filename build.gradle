plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.5.31'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.5.31'
    id("org.springframework.boot") version "2.4.5"
    id("io.spring.dependency-management") version "1.0.11.RELEASE"
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib"
    implementation 'org.junit.jupiter:junit-jupiter:5.8.2'
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.3.2'
    testImplementation 'com.natpryce:hamkrest:1.8.0.1'

    implementation 'org.springdoc:springdoc-openapi-webflux-ui:1.6.5'
    implementation("org.springframework.boot:spring-boot-starter-actuator")
    implementation("org.springframework.boot:spring-boot-starter-webflux")
    implementation("com.fasterxml.jackson.module:jackson-module-kotlin")
    implementation("io.projectreactor.kotlin:reactor-kotlin-extensions")
    implementation("org.jetbrains.kotlin:kotlin-reflect")
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-reactor")

    implementation("org.springframework.boot:spring-boot-starter-data-jpa")
    runtime "com.h2database:h2"
    //runtimeOnly("org.postgresql:postgresql")

    developmentOnly("org.springframework.boot:spring-boot-devtools")
    testImplementation("org.springframework.boot:spring-boot-starter-test")
    testImplementation("io.projectreactor:reactor-test")
    testImplementation "org.mockito:mockito-inline"
    testImplementation "io.mockk:mockk:1.12.2"}

test {
    useJUnitPlatform()
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
        freeCompilerArgs = ["-Xinline-classes"]
    }
}